name: 'Get Tools'
description: 'Getting tools to generate .sh'
inputs:
  tool:
    required: true
runs:
  using: "composite" 
  steps:
    - name: Set cert_tool
      shell: bash
      if: contains(inputs.tool, 'cert_tool')
      run: |
        if [ -z "${{ env.VAR }}" ]; then
          echo 'VAR={\"key\":\"cert-tool\",\"path\":\"unattended_installer/cert_tool\"}' >> $GITHUB_ENV
        else
          echo 'VAR=${{ env.VAR }},{\"key\":\"cert-tool\",\"path\":\"unattended_installer/cert_tool\"}' >> $GITHUB_ENV
        fi
    - name: Set passwords_tool
      shell: bash
      if: contains(inputs.tool, 'passwords_tools')
      run: |
        if [ -z "${{ env.VAR }}" ]; then
          echo 'VAR=\"password-tool\"' >> $GITHUB_ENV
        else
          echo 'VAR=${{ env.VAR }},\"password-tool\"' >> $GITHUB_ENV
        fi
    - name: Set installer
      shell: bash
      if: |
        contains(inputs.tool, 'downloaders') || 
        contains(inputs.tool, 'install_functionss')
      run: |
        if [ -z "${{ env.VAR }}" ]; then
          echo 'VAR=\"installer\"' >> $GITHUB_ENV
        else
          echo 'VAR=${{ env.VAR }},\"installer\"' >> $GITHUB_ENV
        fi
    - name: Set all
      shell: bash
      if: contains(inputs.tool, 'common_functionss')
      run: |
        echo 'VAR=\"cert-tool\",\"password-tool\",\"installer\"' >> $GITHUB_ENV
    - name: Set builder.sh
      shell: bash
      if: contains(inputs.tool, 'builder.sh')
      run: |
        if [ -z "${{ env.VAR }}" ]; then
          echo 'VAR={\"key\":\"builder.sh\",\"path\":\"unattended_installer\"}' >> $GITHUB_ENV
        else
          echo 'VAR=${{ env.VAR }},{\"key\":\"builder.sh\",\"path\":\"unattended_installer\"}' >> $GITHUB_ENV
        fi
