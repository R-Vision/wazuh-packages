name: Shellcheck code analysis
on: [pull_request]

jobs:
  Get-changes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0
      - name: Get changes
        uses: jitterbit/get-changed-files@v1
        id: changed_files
        with:
          format: space-delimited
      - name: Set tools
        uses: './.github/actions/get-tools/'
        with: 
          tool: "${{ steps.changed_files.outputs.all }}"
      - name: Build matrix
        id: set-matrix
        run: |
          echo "::set-output name=tools_matrix::{\"data\":[${{ env.VAR }}]}"
    outputs:
      tools_matrix: ${{ steps.set-matrix.outputs.tools_matrix }}
  
  Builder-scripts:
    name: Builder scripts artifacts
    runs-on: ubuntu-latest
    needs: Get-changes
    strategy:
      matrix: ${{ fromJson(needs.Get-changes.outputs.tools_matrix) }}
        #tool: ${{ fromJson(needs.Get-changes.outputs.tools_matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0
      - name: Build
        run: |
          echo "key: ${{ matrix.key }} path: ${{ matrix.path }}"
      - name: Generate artifacts
        uses: './.github/actions/generate-artifacts/'
        with: 
          artifact: "${{ matrix.key }}"
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: artifacts_generated
          path: |
            unattended_installer/**tool.sh
          
  Shellcheck-for-libraries:
    name: Shellcheck / runner for libraries
    runs-on: ubuntu-latest
    needs: Get-changes
    steps:
      - uses: actions/checkout@v1
      - name: Shellcheck for libraries of artifacts
        uses: './.github/actions/shellcheck/'
        with:
          reporter: github-pr-review
          path: |
            unattended_installer/cert_tool
            unattended_installer/passwords_tool
          pattern: "*.sh"
          fail_on_error: "false"
          
  Shellcheck-for-artifacts:
    name: Shellcheck / runner for artifacts
    runs-on: ubuntu-latest
    needs: Builder-scripts
    steps:
      - uses: actions/checkout@v1
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      - name: Shellcheck for artifacts generated
        uses: './.github/actions/shellcheck/'
        with:
          reporter: github-pr-review
          path: "./artifacts_generated"
          pattern: "*.sh"
          fail_on_error: "false"
      - name: Comments into issue
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })
            
  pr_commented:
    # This job only runs for pull request comments
    name: PR comment
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo A comment on PR $NUMBER
        env:
          NUMBER: ${{ github.event.issue.number }}
